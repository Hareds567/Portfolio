{"ast":null,"code":"import { normalizeArguments } from './getNumberType';\nimport _isPossibleNumber from './isPossibleNumber_';\n/**\r\n * Checks if a given phone number is possible.\r\n * Which means it only checks phone number length\r\n * and doesn't test any regular expressions.\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isPossibleNumber('+78005553535', metadata)\r\n * isPossibleNumber('8005553535', 'RU', metadata)\r\n * isPossibleNumber('88005553535', 'RU', metadata)\r\n * isPossibleNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\n\nexport default function isPossibleNumber() {\n  var _normalizeArguments = normalizeArguments(arguments),\n      input = _normalizeArguments.input,\n      options = _normalizeArguments.options,\n      metadata = _normalizeArguments.metadata;\n\n  return _isPossibleNumber(input, options, metadata);\n}","map":{"version":3,"sources":["../source/isPossibleNumber.js"],"names":["input","options","metadata","normalizeArguments","_isPossibleNumber"],"mappings":"AAAA,SAAA,kBAAA,QAAA,iBAAA;AACA,OAAA,iBAAA,MAAA,qBAAA;AAEA;;;;;;;;;;;;;;;AAcA,eAAe,SAAA,gBAAA,GACf;AAAA,MAAA,mBAAA,GACsCG,kBAAkB,CADxD,SACwD,CADxD;AAAA,MACSH,KADT,GAAA,mBAAA,CAAA,KAAA;AAAA,MACgBC,OADhB,GAAA,mBAAA,CAAA,OAAA;AAAA,MACyBC,QADzB,GAAA,mBAAA,CAAA,QAAA;;AAEC,SAAOE,iBAAiB,CAAA,KAAA,EAAA,OAAA,EAAxB,QAAwB,CAAxB;AACA","sourcesContent":["import { normalizeArguments } from './getNumberType'\r\nimport _isPossibleNumber from './isPossibleNumber_'\r\n\r\n/**\r\n * Checks if a given phone number is possible.\r\n * Which means it only checks phone number length\r\n * and doesn't test any regular expressions.\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isPossibleNumber('+78005553535', metadata)\r\n * isPossibleNumber('8005553535', 'RU', metadata)\r\n * isPossibleNumber('88005553535', 'RU', metadata)\r\n * isPossibleNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\r\nexport default function isPossibleNumber()\r\n{\r\n\tconst { input, options, metadata } = normalizeArguments(arguments)\r\n\treturn _isPossibleNumber(input, options, metadata)\r\n}"]},"metadata":{},"sourceType":"module"}