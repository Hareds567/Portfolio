{"ast":null,"code":"import isViablePhoneNumber from './helpers/isViablePhoneNumber';\nimport parseNumber from './parse_';\nimport _isValidNumberForRegion from './isValidNumberForRegion_';\nexport default function isValidNumberForRegion(number, country, metadata) {\n  if (typeof number !== 'string') {\n    throw new TypeError('number must be a string');\n  }\n\n  if (typeof country !== 'string') {\n    throw new TypeError('country must be a string');\n  } // `parse` extracts phone numbers from raw text,\n  // therefore it will cut off all \"garbage\" characters,\n  // while this `validate` function needs to verify\n  // that the phone number contains no \"garbage\"\n  // therefore the explicit `isViablePhoneNumber` check.\n\n\n  var input;\n\n  if (isViablePhoneNumber(number)) {\n    input = parseNumber(number, {\n      defaultCountry: country\n    }, metadata);\n  } else {\n    input = {};\n  }\n\n  return _isValidNumberForRegion(input, country, undefined, metadata);\n}","map":{"version":3,"sources":["../source/isValidNumberForRegion.js"],"names":["isViablePhoneNumber","input","parseNumber","defaultCountry","country","_isValidNumberForRegion"],"mappings":"AAAA,OAAA,mBAAA,MAAA,+BAAA;AACA,OAAA,WAAA,MAAA,UAAA;AACA,OAAA,uBAAA,MAAA,2BAAA;AAEA,eAAe,SAAA,sBAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAA2D;AACzE,MAAI,OAAA,MAAA,KAAJ,QAAA,EAAgC;AAC/B,UAAM,IAAA,SAAA,CAAN,yBAAM,CAAN;AACA;;AACD,MAAI,OAAA,OAAA,KAAJ,QAAA,EAAiC;AAChC,UAAM,IAAA,SAAA,CAAN,0BAAM,CAAN;AALwE,GAAA,CAOzE;AACA;AACA;AACA;AACA;;;AACA,MAAA,KAAA;;AACA,MAAIA,mBAAmB,CAAvB,MAAuB,CAAvB,EAAiC;AAChCC,IAAAA,KAAK,GAAGC,WAAW,CAAA,MAAA,EAAS;AAAEC,MAAAA,cAAc,EAAEC;AAAlB,KAAT,EAAnBH,QAAmB,CAAnBA;AADD,GAAA,MAEO;AACNA,IAAAA,KAAK,GAALA,EAAAA;AACA;;AACD,SAAOI,uBAAuB,CAAA,KAAA,EAAA,OAAA,EAAA,SAAA,EAA9B,QAA8B,CAA9B;AACA","sourcesContent":["import isViablePhoneNumber from './helpers/isViablePhoneNumber'\r\nimport parseNumber from './parse_'\r\nimport _isValidNumberForRegion from './isValidNumberForRegion_'\r\n\r\nexport default function isValidNumberForRegion(number, country, metadata) {\r\n\tif (typeof number !== 'string') {\r\n\t\tthrow new TypeError('number must be a string')\r\n\t}\r\n\tif (typeof country !== 'string') {\r\n\t\tthrow new TypeError('country must be a string')\r\n\t}\r\n\t// `parse` extracts phone numbers from raw text,\r\n\t// therefore it will cut off all \"garbage\" characters,\r\n\t// while this `validate` function needs to verify\r\n\t// that the phone number contains no \"garbage\"\r\n\t// therefore the explicit `isViablePhoneNumber` check.\r\n\tlet input\r\n\tif (isViablePhoneNumber(number)) {\r\n\t\tinput = parseNumber(number, { defaultCountry: country }, metadata)\r\n\t} else {\r\n\t\tinput = {}\r\n\t}\r\n\treturn _isValidNumberForRegion(input, country, undefined, metadata)\r\n}"]},"metadata":{},"sourceType":"module"}