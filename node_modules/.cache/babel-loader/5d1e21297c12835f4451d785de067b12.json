{"ast":null,"code":"import _slicedToArray from\"C:/Users/justi/Projects/Portfolio/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useCallback,useState}from\"react\";import*as THREE from\"three\";//Local Components\nimport Header from\"./Header/Header\";import Portfolio from\"./Portfolio/Portfolio\";import ContactMe from\"./ContactInformation/ContactMe\";import About from\"./About/About\";//Textures\nimport rockImage from\"./Textures/rockTexture.jpg\";import rockHeightImage from\"./Textures/height.png\";import alphaImage from\"./Textures/alpha.png\";//Styles\nimport\"./App.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var App=function App(){var mouseY=0;var mouseX=0;//Texture Loader\nvar loader=new THREE.TextureLoader();var rockTexture=loader.load(rockImage);var rockHeight=loader.load(rockHeightImage);var rockAlpha=loader.load(alphaImage);//Window Information\nvar initialWidth=window.innerWidth;var initialHeight=window.innerHeight;//Debug\nvar gridHelper=new THREE.GridHelper(window.innerWidth,10);//let gui = useRef(new dat.GUI());\n//Three Initialization\nvar scene=new THREE.Scene();var camera=new THREE.PerspectiveCamera(90,initialWidth/initialHeight,0.1,150);camera.position.z=10;var tanFOV=Math.tan(Math.PI/180*camera.fov/2);var clock=new THREE.Clock();var renderer=useRef(new THREE.WebGL1Renderer({alpha:true}));//Add to Scene\n//scene.add(gridHelper);\nvar appDiv=useCallback(//Surround the canvas inside div\nfunction(div){if(div==null)return;var canvas=document.getElementById(\"city-canvas\");var guiDiv=document.getElementsByClassName(\"dg main a\");if(guiDiv.length>1){for(var i=0;i<guiDiv.length;i++){if(i!==1)guiDiv[i].remove();}}canvas===null||canvas===void 0?void 0:canvas.remove();//guiDiv?.remove();\n//guiDivPlane?.remove();\nrenderer.current.setSize(initialWidth,initialHeight);//Build Renderers\nrenderer.current.domElement.id=\"city-canvas\";//Add Rendered inside\ndiv.appendChild(renderer.current.domElement);},[renderer]);//========================\t\tOBJECTS\t(START)\t\t=========================\n//========= Cube\nvar cubeGeometry=new THREE.BoxGeometry(2,2,2);//Object\nvar material=new THREE.MeshBasicMaterial({color:0x00ff00});//Material\nvar cube=new THREE.Mesh(cubeGeometry,material);//Create Mesh\n//scene.add(cube); //Add cube to the scene\n//Animation and Rendering  of the Cube\nvar animateCube=function animateCube(){requestAnimationFrame(animateCube);cube.rotation.x+=0.01;cube.rotation.y+=0.01;renderer.current.render(scene,camera);};animateCube();//=========\tPlane\nvar xGeometry=new THREE.PlaneBufferGeometry(20,20,64,64);var xMaterial=new THREE.MeshStandardMaterial({color:\"white\",map:rockTexture,displacementMap:rockHeight,displacementScale:3.5,alphaMap:rockAlpha,transparent:true,depthTest:false});var xMesh=new THREE.Mesh(xGeometry,xMaterial);xMesh.rotation.x=30;xMesh.position.set(0,-2,1);//scene.add(xMesh);\n//gui.current.add(xMesh.rotation, \"x\").min(0).max(200);\nvar tick=function tick(){var elapsedTime=clock.getElapsedTime();xMesh.rotation.z=0.08*elapsedTime;//\txMesh.material.displacementScale = mouseY * 0.005;\nwindow.requestAnimationFrame(tick);};tick();//=========\tSphere\nvar sphereGeometry=new THREE.TorusGeometry(6,1.5,15,100);var sphereMaterial=new THREE.PointsMaterial({size:0.00005});var sphere=new THREE.Points(sphereGeometry,sphereMaterial);//scene.add(sphere);\nvar sphereAnimation=function sphereAnimation(){var elapsedTime=clock.getElapsedTime();sphere.rotation.y=0.3*elapsedTime;renderer.current.render(scene,camera);requestAnimationFrame(sphereAnimation);};//sphereAnimation();\n//========= Particles\nvar particleGeometry=new THREE.BufferGeometry();var particleMaterial=new THREE.PointsMaterial({size:0.00005});var particleNum=9000;var positionArray=new Float32Array(particleNum*3);for(var i=0;i<positionArray.length-1;i++){positionArray[i]=(Math.random()-0.5)*500;}particleGeometry.setAttribute(\"position\",new THREE.BufferAttribute(positionArray,3));var particle=new THREE.Points(particleGeometry,particleMaterial);scene.add(particle);var particleAnimation=function particleAnimation(){var elapsedTime=clock.getElapsedTime();particle.rotation.y=elapsedTime*0.003;// particle.rotation.x = elapsedTime * 0.003;\nparticle.rotation.z=elapsedTime*0.003;requestAnimationFrame(particleAnimation);};particleAnimation();//========================\t\tOBJECTS\t(END)\t\t========================\n//========================\t\tLIGHTS (START)\t \t=========================\nvar firstLight=new THREE.PointLight(\"#ffffff\",1.5,100);firstLight.position.set(-9.5,3,4);scene.add(firstLight);var firstLightHelper=new THREE.PointLightHelper(firstLight);//scene.add(firstLightHelper);\n//const color = { color: \"#00ff00\" };\n// gui.current.addColor(color, \"color\").onChange(() => {\n// \tfirstLight.color.set(color.color);\n// });\n// gui.current.add(firstLight.position, \"x\");\n// gui.current.add(firstLight.position, \"y\");\n// gui.current.add(firstLight.position, \"z\");\n//========================\t\tLIGHTS (END)\t\t\t========================\n//========================\t\tUSE EFFECT (START)\t \t========================\n//Update the dimensions of the Renderer\nvar updateWindowDimensions=function updateWindowDimensions(){camera.aspect=window.innerWidth/window.innerHeight;camera.fov=360/Math.PI*Math.atan(tanFOV*(window.innerHeight/initialHeight));camera.updateProjectionMatrix();camera.lookAt(scene.position);renderer.current.setSize(window.innerWidth,window.innerHeight);};var animateTerrain=function animateTerrain(event){mouseY=event.clientY;mouseX=event.clientX;};//Update elements as the Size of Window changes\nuseEffect(function(){window.addEventListener(\"resize\",updateWindowDimensions);window.addEventListener(\"mousemove\",animateTerrain);});//Initialize the Renderer\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),body_isVisible=_useState2[0],set_body_isVisible=_useState2[1];useEffect(function(){setTimeout(function(){set_body_isVisible(true);},11000);},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"div\",{className:\"App\",ref:appDiv,children:/*#__PURE__*/_jsxs(\"div\",{className:\"Welcome-message\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Hello, My name is Justin.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Welcome to my website!\"})]})}),body_isVisible?/*#__PURE__*/_jsxs(_Fragment,{children:[\" \",/*#__PURE__*/_jsx(Portfolio,{}),/*#__PURE__*/_jsx(About,{}),/*#__PURE__*/_jsx(ContactMe,{}),\" \"]}):/*#__PURE__*/_jsx(_Fragment,{})]});};export default App;","map":{"version":3,"sources":["C:/Users/justi/Projects/Portfolio/portfolio/src/App.tsx"],"names":["React","useEffect","useRef","useCallback","useState","THREE","Header","Portfolio","ContactMe","About","rockImage","rockHeightImage","alphaImage","App","mouseY","mouseX","loader","TextureLoader","rockTexture","load","rockHeight","rockAlpha","initialWidth","window","innerWidth","initialHeight","innerHeight","gridHelper","GridHelper","scene","Scene","camera","PerspectiveCamera","position","z","tanFOV","Math","tan","PI","fov","clock","Clock","renderer","WebGL1Renderer","alpha","appDiv","div","canvas","document","getElementById","guiDiv","getElementsByClassName","length","i","remove","current","setSize","domElement","id","appendChild","cubeGeometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","animateCube","requestAnimationFrame","rotation","x","y","render","xGeometry","PlaneBufferGeometry","xMaterial","MeshStandardMaterial","map","displacementMap","displacementScale","alphaMap","transparent","depthTest","xMesh","set","tick","elapsedTime","getElapsedTime","sphereGeometry","TorusGeometry","sphereMaterial","PointsMaterial","size","sphere","Points","sphereAnimation","particleGeometry","BufferGeometry","particleMaterial","particleNum","positionArray","Float32Array","random","setAttribute","BufferAttribute","particle","add","particleAnimation","firstLight","PointLight","firstLightHelper","PointLightHelper","updateWindowDimensions","aspect","atan","updateProjectionMatrix","lookAt","animateTerrain","event","clientY","clientX","addEventListener","body_isVisible","set_body_isVisible","setTimeout"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useCallback, useState } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport * as dat from \"dat.gui\";\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\n\r\n//Local Components\r\nimport Header from \"./Header/Header\";\r\nimport Portfolio from \"./Portfolio/Portfolio\";\r\nimport ContactMe from \"./ContactInformation/ContactMe\";\r\nimport About from \"./About/About\";\r\n//Textures\r\nimport rockImage from \"./Textures/rockTexture.jpg\";\r\nimport rockHeightImage from \"./Textures/height.png\";\r\nimport alphaImage from \"./Textures/alpha.png\";\r\n//Styles\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n\tlet mouseY = 0;\r\n\tlet mouseX = 0;\r\n\t//Texture Loader\r\n\tconst loader = new THREE.TextureLoader();\r\n\tconst rockTexture = loader.load(rockImage);\r\n\tconst rockHeight = loader.load(rockHeightImage);\r\n\tconst rockAlpha = loader.load(alphaImage);\r\n\t//Window Information\r\n\tconst initialWidth = window.innerWidth;\r\n\tconst initialHeight = window.innerHeight;\r\n\r\n\t//Debug\r\n\tconst gridHelper = new THREE.GridHelper(window.innerWidth, 10);\r\n\r\n\t//let gui = useRef(new dat.GUI());\r\n\r\n\t//Three Initialization\r\n\tconst scene = new THREE.Scene();\r\n\tconst camera = new THREE.PerspectiveCamera(\r\n\t\t90,\r\n\t\tinitialWidth / initialHeight,\r\n\t\t0.1,\r\n\t\t150\r\n\t);\r\n\tcamera.position.z = 10;\r\n\tlet tanFOV = Math.tan(((Math.PI / 180) * camera.fov) / 2);\r\n\r\n\tconst clock = new THREE.Clock();\r\n\tconst renderer = useRef(new THREE.WebGL1Renderer({ alpha: true }));\r\n\r\n\t//Add to Scene\r\n\t//scene.add(gridHelper);\r\n\r\n\tconst appDiv = useCallback(\r\n\t\t//Surround the canvas inside div\r\n\t\t(div: HTMLDivElement) => {\r\n\t\t\tif (div == null) return;\r\n\t\t\tconst canvas = document.getElementById(\"city-canvas\");\r\n\t\t\tconst guiDiv = document.getElementsByClassName(\"dg main a\");\r\n\t\t\tif (guiDiv.length > 1) {\r\n\t\t\t\tfor (var i: number = 0; i < guiDiv.length; i++) {\r\n\t\t\t\t\tif (i !== 1) guiDiv[i].remove();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcanvas?.remove();\r\n\t\t\t//guiDiv?.remove();\r\n\t\t\t//guiDivPlane?.remove();\r\n\r\n\t\t\trenderer.current.setSize(initialWidth, initialHeight); //Build Renderers\r\n\t\t\trenderer.current.domElement.id = \"city-canvas\"; //Add Rendered inside\r\n\t\t\tdiv.appendChild(renderer.current.domElement);\r\n\t\t},\r\n\t\t[renderer]\r\n\t);\r\n\t//========================\t\tOBJECTS\t(START)\t\t=========================\r\n\r\n\t//========= Cube\r\n\tconst cubeGeometry = new THREE.BoxGeometry(2, 2, 2); //Object\r\n\tconst material = new THREE.MeshBasicMaterial({ color: 0x00ff00 }); //Material\r\n\tconst cube = new THREE.Mesh(cubeGeometry, material); //Create Mesh\r\n\t//scene.add(cube); //Add cube to the scene\r\n\t//Animation and Rendering  of the Cube\r\n\tconst animateCube = () => {\r\n\t\trequestAnimationFrame(animateCube);\r\n\t\tcube.rotation.x += 0.01;\r\n\t\tcube.rotation.y += 0.01;\r\n\t\trenderer.current.render(scene, camera);\r\n\t};\r\n\tanimateCube();\r\n\r\n\t//=========\tPlane\r\n\tconst xGeometry = new THREE.PlaneBufferGeometry(20, 20, 64, 64);\r\n\tconst xMaterial = new THREE.MeshStandardMaterial({\r\n\t\tcolor: \"white\",\r\n\t\tmap: rockTexture,\r\n\t\tdisplacementMap: rockHeight,\r\n\t\tdisplacementScale: 3.5,\r\n\t\talphaMap: rockAlpha,\r\n\t\ttransparent: true,\r\n\t\tdepthTest: false,\r\n\t});\r\n\tconst xMesh = new THREE.Mesh(xGeometry, xMaterial);\r\n\txMesh.rotation.x = 30;\r\n\txMesh.position.set(0, -2, 1);\r\n\t//scene.add(xMesh);\r\n\t//gui.current.add(xMesh.rotation, \"x\").min(0).max(200);\r\n\r\n\tconst tick = () => {\r\n\t\tconst elapsedTime = clock.getElapsedTime();\r\n\t\txMesh.rotation.z = 0.08 * elapsedTime;\r\n\t\t//\txMesh.material.displacementScale = mouseY * 0.005;\r\n\t\twindow.requestAnimationFrame(tick);\r\n\t};\r\n\ttick();\r\n\r\n\t//=========\tSphere\r\n\tconst sphereGeometry = new THREE.TorusGeometry(6, 1.5, 15, 100);\r\n\tconst sphereMaterial = new THREE.PointsMaterial({\r\n\t\tsize: 0.00005,\r\n\t});\r\n\tconst sphere = new THREE.Points(sphereGeometry, sphereMaterial);\r\n\t//scene.add(sphere);\r\n\r\n\tconst sphereAnimation = () => {\r\n\t\tconst elapsedTime = clock.getElapsedTime();\r\n\t\tsphere.rotation.y = 0.3 * elapsedTime;\r\n\t\trenderer.current.render(scene, camera);\r\n\t\trequestAnimationFrame(sphereAnimation);\r\n\t};\r\n\t//sphereAnimation();\r\n\r\n\t//========= Particles\r\n\tconst particleGeometry = new THREE.BufferGeometry();\r\n\tconst particleMaterial = new THREE.PointsMaterial({\r\n\t\tsize: 0.00005,\r\n\t});\r\n\tconst particleNum = 9000;\r\n\tconst positionArray = new Float32Array(particleNum * 3);\r\n\tfor (let i = 0; i < positionArray.length - 1; i++) {\r\n\t\tpositionArray[i] = (Math.random() - 0.5) * 500;\r\n\t}\r\n\tparticleGeometry.setAttribute(\r\n\t\t\"position\",\r\n\t\tnew THREE.BufferAttribute(positionArray, 3)\r\n\t);\r\n\tconst particle = new THREE.Points(particleGeometry, particleMaterial);\r\n\tscene.add(particle);\r\n\r\n\tconst particleAnimation = () => {\r\n\t\tconst elapsedTime = clock.getElapsedTime();\r\n\t\tparticle.rotation.y = elapsedTime * 0.003;\r\n\t\t// particle.rotation.x = elapsedTime * 0.003;\r\n\t\tparticle.rotation.z = elapsedTime * 0.003;\r\n\t\trequestAnimationFrame(particleAnimation);\r\n\t};\r\n\tparticleAnimation();\r\n\t//========================\t\tOBJECTS\t(END)\t\t========================\r\n\r\n\t//========================\t\tLIGHTS (START)\t \t=========================\r\n\tconst firstLight = new THREE.PointLight(\"#ffffff\", 1.5, 100);\r\n\tfirstLight.position.set(-9.5, 3, 4);\r\n\tscene.add(firstLight);\r\n\tconst firstLightHelper = new THREE.PointLightHelper(firstLight);\r\n\t//scene.add(firstLightHelper);\r\n\r\n\t//const color = { color: \"#00ff00\" };\r\n\t// gui.current.addColor(color, \"color\").onChange(() => {\r\n\t// \tfirstLight.color.set(color.color);\r\n\t// });\r\n\t// gui.current.add(firstLight.position, \"x\");\r\n\t// gui.current.add(firstLight.position, \"y\");\r\n\t// gui.current.add(firstLight.position, \"z\");\r\n\r\n\t//========================\t\tLIGHTS (END)\t\t\t========================\r\n\r\n\t//========================\t\tUSE EFFECT (START)\t \t========================\r\n\t//Update the dimensions of the Renderer\r\n\tconst updateWindowDimensions = () => {\r\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\r\n\t\tcamera.fov =\r\n\t\t\t(360 / Math.PI) *\r\n\t\t\tMath.atan(tanFOV * (window.innerHeight / initialHeight));\r\n\t\tcamera.updateProjectionMatrix();\r\n\t\tcamera.lookAt(scene.position);\r\n\t\trenderer.current.setSize(window.innerWidth, window.innerHeight);\r\n\t};\r\n\r\n\tconst animateTerrain = (event: MouseEvent) => {\r\n\t\tmouseY = event.clientY;\r\n\t\tmouseX = event.clientX;\r\n\t};\r\n\r\n\t//Update elements as the Size of Window changes\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener(\"resize\", updateWindowDimensions);\r\n\t\twindow.addEventListener(\"mousemove\", animateTerrain);\r\n\t});\r\n\t//Initialize the Renderer\r\n\r\n\tconst [body_isVisible, set_body_isVisible] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tset_body_isVisible(true);\r\n\t\t}, 11000);\r\n\t}, []);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* {header_isVisible ? <Header /> : <></>} */}\r\n\t\t\t<Header />\r\n\t\t\t{/* <Header /> */}\r\n\t\t\t<div className='App' ref={appDiv}>\r\n\t\t\t\t{/* <Header /> */}\r\n\t\t\t\t<div className='Welcome-message'>\r\n\t\t\t\t\t<h1>Hello, My name is Justin.</h1>\r\n\t\t\t\t\t<p>Welcome to my website!</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{body_isVisible ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t<Portfolio />\r\n\t\t\t\t\t<About />\r\n\t\t\t\t\t<ContactMe />{\" \"}\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<></>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}