{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\justi\\\\Projects\\\\Portfolio\\\\portfolio\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useCallback } from \"react\";\nimport * as THREE from \"three\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const width = useRef(window.innerWidth);\n  const height = useRef(window.innerHeight);\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera(90, 3440 / 1440, 0.1, 1000);\n  const renderer = new THREE.WebGL1Renderer();\n  const appDiv = useCallback(div => {\n    if (div == null) return;\n    const canvas = document.getElementById(\"city-canvas\");\n    canvas === null || canvas === void 0 ? void 0 : canvas.remove();\n    console.log(div);\n    renderer.setSize(width.current, height.current);\n    renderer.domElement.id = \"city-canvas\";\n    div.appendChild(renderer.domElement);\n  }, [renderer]); //afdsfas\n  //Cube\n\n  const geometry = new THREE.BoxGeometry(2, 2, 2);\n  const material = new THREE.MeshBasicMaterial({\n    color: 0x00ff00\n  });\n  const cube = new THREE.Mesh(geometry, material);\n  scene.add(cube);\n  camera.position.z = 5; //Animation and Rendering the Cube\n\n  const animateCube = () => {\n    requestAnimationFrame(animateCube);\n    cube.rotation.x += 0.01;\n    cube.rotation.y += 0.01;\n    renderer.render(scene, camera);\n  }; //Update the dimensions of the Renderer\n\n\n  const updateWindowDimensions = () => {\n    width.current = window.innerWidth;\n    height.current = window.innerHeight;\n    renderer.setSize(width.current, height.current);\n  };\n\n  animateCube(); //Update Size of Window\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateWindowDimensions);\n  }); //Initialize the Renderer\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    ref: appDiv\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"DB+QmY2rNQxuy/JNgYvo3UnOaMY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/justi/Projects/Portfolio/portfolio/src/App.tsx"],"names":["React","useEffect","useRef","useCallback","THREE","App","width","window","innerWidth","height","innerHeight","scene","Scene","camera","PerspectiveCamera","renderer","WebGL1Renderer","appDiv","div","canvas","document","getElementById","remove","console","log","setSize","current","domElement","id","appendChild","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","position","z","animateCube","requestAnimationFrame","rotation","x","y","render","updateWindowDimensions","addEventListener"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useCallback } from \"react\";\nimport * as THREE from \"three\";\n\nimport \"./App.css\";\n\nconst App = () => {\n\tconst width = useRef(window.innerWidth);\n\tconst height = useRef(window.innerHeight);\n\n\tconst scene = new THREE.Scene();\n\tconst camera = new THREE.PerspectiveCamera(90, 3440 / 1440, 0.1, 1000);\n\tconst renderer = new THREE.WebGL1Renderer();\n\n\tconst appDiv = useCallback(\n\t\t(div: HTMLDivElement) => {\n\t\t\tif (div == null) return;\n\t\t\tconst canvas = document.getElementById(\"city-canvas\");\n\t\t\tcanvas?.remove();\n\t\t\tconsole.log(div);\n\t\t\trenderer.setSize(width.current, height.current);\n\t\t\trenderer.domElement.id = \"city-canvas\";\n\t\t\tdiv.appendChild(renderer.domElement);\n\t\t},\n\t\t[renderer]\n\t);\n\t//afdsfas\n\t//Cube\n\tconst geometry = new THREE.BoxGeometry(2, 2, 2);\n\tconst material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n\tconst cube = new THREE.Mesh(geometry, material);\n\n\tscene.add(cube);\n\tcamera.position.z = 5;\n\t//Animation and Rendering the Cube\n\tconst animateCube = () => {\n\t\trequestAnimationFrame(animateCube);\n\t\tcube.rotation.x += 0.01;\n\t\tcube.rotation.y += 0.01;\n\t\trenderer.render(scene, camera);\n\t};\n\n\t//Update the dimensions of the Renderer\n\tconst updateWindowDimensions = () => {\n\t\twidth.current = window.innerWidth;\n\t\theight.current = window.innerHeight;\n\t\trenderer.setSize(width.current, height.current);\n\t};\n\n\tanimateCube();\n\t//Update Size of Window\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"resize\", updateWindowDimensions);\n\t});\n\t//Initialize the Renderer\n\tuseEffect(() => {}, []);\n\n\treturn (\n\t\t<div className='App' ref={appDiv}>\n\t\t\t{/* <div className='info'>I like Cheese</div> */}\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}