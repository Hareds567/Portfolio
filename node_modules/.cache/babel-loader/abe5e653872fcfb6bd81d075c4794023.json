{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\justi\\\\Projects\\\\Portfolio\\\\portfolio\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useCallback } from \"react\";\nimport * as THREE from \"three\"; //Local Components\n\nimport Header from \"./Header/Header\"; //Styles\n\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const width = useRef(window.innerWidth);\n  const height = useRef(window.innerHeight);\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera(90, width.current / height.current, 0.1, 1000);\n  const renderer = useRef(new THREE.WebGL1Renderer());\n  const appDiv = useCallback(div => {\n    if (div == null) return;\n    const canvas = document.getElementById(\"city-canvas\");\n    canvas === null || canvas === void 0 ? void 0 : canvas.remove();\n    renderer.current.setSize(width.current, height.current);\n    renderer.current.domElement.id = \"city-canvas\";\n    div.appendChild(renderer.current.domElement);\n  }, [renderer]); //afdsfas\n  //Cube\n\n  const geometry = new THREE.BoxGeometry(2, 2, 2);\n  const material = new THREE.MeshBasicMaterial({\n    color: 0x00ff00\n  });\n  const cube = new THREE.Mesh(geometry, material);\n  scene.add(cube);\n  camera.position.z = 5; //Animation and Rendering the Cube\n\n  const animateCube = () => {\n    requestAnimationFrame(animateCube);\n    cube.rotation.x += 0.01;\n    cube.rotation.y += 0.01;\n    renderer.current.render(scene, camera);\n  }; //Update the dimensions of the Renderer\n\n\n  const updateWindowDimensions = () => {\n    width.current = window.innerWidth;\n    height.current = window.innerHeight;\n    renderer.current.setSize(width.current, height.current);\n  };\n\n  animateCube(); //Update Size of Window\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateWindowDimensions);\n  }); //Initialize the Renderer\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    ref: appDiv,\n    children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"D7OK4/kKxL0aejwpIY967Ny6ibo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/justi/Projects/Portfolio/portfolio/src/App.tsx"],"names":["React","useEffect","useRef","useCallback","THREE","Header","App","width","window","innerWidth","height","innerHeight","scene","Scene","camera","PerspectiveCamera","current","renderer","WebGL1Renderer","appDiv","div","canvas","document","getElementById","remove","setSize","domElement","id","appendChild","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","position","z","animateCube","requestAnimationFrame","rotation","x","y","render","updateWindowDimensions","addEventListener"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useCallback } from \"react\";\nimport * as THREE from \"three\";\n//Local Components\nimport Header from \"./Header/Header\";\n//Styles\nimport \"./App.css\";\n\nconst App = () => {\n\tconst width = useRef(window.innerWidth);\n\tconst height = useRef(window.innerHeight);\n\n\tconst scene = new THREE.Scene();\n\tconst camera = new THREE.PerspectiveCamera(\n\t\t90,\n\t\twidth.current / height.current,\n\t\t0.1,\n\t\t1000\n\t);\n\tconst renderer = useRef(new THREE.WebGL1Renderer());\n\n\tconst appDiv = useCallback(\n\t\t(div: HTMLDivElement) => {\n\t\t\tif (div == null) return;\n\t\t\tconst canvas = document.getElementById(\"city-canvas\");\n\t\t\tcanvas?.remove();\n\t\t\trenderer.current.setSize(width.current, height.current);\n\t\t\trenderer.current.domElement.id = \"city-canvas\";\n\t\t\tdiv.appendChild(renderer.current.domElement);\n\t\t},\n\t\t[renderer]\n\t);\n\t//afdsfas\n\t//Cube\n\tconst geometry = new THREE.BoxGeometry(2, 2, 2);\n\tconst material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n\tconst cube = new THREE.Mesh(geometry, material);\n\n\tscene.add(cube);\n\tcamera.position.z = 5;\n\t//Animation and Rendering the Cube\n\tconst animateCube = () => {\n\t\trequestAnimationFrame(animateCube);\n\t\tcube.rotation.x += 0.01;\n\t\tcube.rotation.y += 0.01;\n\t\trenderer.current.render(scene, camera);\n\t};\n\n\t//Update the dimensions of the Renderer\n\tconst updateWindowDimensions = () => {\n\t\twidth.current = window.innerWidth;\n\t\theight.current = window.innerHeight;\n\t\trenderer.current.setSize(width.current, height.current);\n\t};\n\n\tanimateCube();\n\t//Update Size of Window\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"resize\", updateWindowDimensions);\n\t});\n\t//Initialize the Renderer\n\tuseEffect(() => {}, []);\n\n\treturn (\n\t\t<div className='App' ref={appDiv}>\n\t\t\t<Header />\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}