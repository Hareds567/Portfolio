{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\justi\\\\Projects\\\\Portfolio\\\\portfolio\\\\src\\\\HomePage\\\\Body_3\\\\Container3.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Node } from \"./Pathfinder\";\nimport Element from \"./Node\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst START_NODE_ROW = 0;\nconst START_NODE_COLUMN = 0;\nconst END_NODE_ROW = 0;\nconst END_NODE_COLUMN = 0;\n\nconst Container3 = () => {\n  _s();\n\n  const [grid, set_grid] = useState(new Array());\n  useEffect(() => {\n    set_grid(createGrid());\n  }, []);\n  useEffect(() => {\n    console.log(grid);\n  }, [grid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: grid.map(node => {\n      return /*#__PURE__*/_jsxDEV(Element, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Container3, \"31un9lavxhrBm8jHVFyd0lmYIxk=\");\n\n_c = Container3;\n\nconst createGrid = () => {\n  const grid = new Array();\n\n  for (let row = 0; row < 20; row++) {\n    for (let column = 0; column < 20; column++) {\n      const isStart = row === START_NODE_ROW && column === START_NODE_COLUMN;\n      const isFinish = row === END_NODE_ROW && column === END_NODE_COLUMN;\n      const node = new Node(row, column, isStart, isFinish);\n      grid.push(node);\n    }\n  }\n\n  return grid;\n};\n\nexport default Container3;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container3\");","map":{"version":3,"sources":["C:/Users/justi/Projects/Portfolio/portfolio/src/HomePage/Body_3/Container3.tsx"],"names":["React","useEffect","useState","Node","Element","START_NODE_ROW","START_NODE_COLUMN","END_NODE_ROW","END_NODE_COLUMN","Container3","grid","set_grid","Array","createGrid","console","log","map","node","row","column","isStart","isFinish","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,OAAOC,OAAP,MAAoB,QAApB;AACA,OAAO,cAAP;;AAEA,MAAMC,cAAc,GAAG,CAAvB;AACA,MAAMC,iBAAiB,GAAG,CAA1B;AAEA,MAAMC,YAAY,GAAG,CAArB;AACA,MAAMC,eAAe,GAAG,CAAxB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAC,IAAIU,KAAJ,EAAD,CAAjC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACE,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cACGA,IAAI,CAACM,GAAL,CAAUC,IAAD,IAAU;AAClB,0BAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAlBD;;GAAMR,U;;KAAAA,U;;AAoBN,MAAMI,UAAU,GAAG,MAAM;AACvB,QAAMH,IAAI,GAAG,IAAIE,KAAJ,EAAb;;AACA,OAAK,IAAIM,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,EAAxB,EAA4BA,GAAG,EAA/B,EAAmC;AACjC,SAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAG,EAA9B,EAAkCA,MAAM,EAAxC,EAA4C;AAC1C,YAAMC,OAAO,GAAGF,GAAG,KAAKb,cAAR,IAA0Bc,MAAM,KAAKb,iBAArD;AACA,YAAMe,QAAQ,GAAGH,GAAG,KAAKX,YAAR,IAAwBY,MAAM,KAAKX,eAApD;AACA,YAAMS,IAAI,GAAG,IAAId,IAAJ,CAASe,GAAT,EAAcC,MAAd,EAAsBC,OAAtB,EAA+BC,QAA/B,CAAb;AACAX,MAAAA,IAAI,CAACY,IAAL,CAAUL,IAAV;AACD;AACF;;AACD,SAAOP,IAAP;AACD,CAXD;;AAaA,eAAeD,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Node } from \"./Pathfinder\";\r\nimport Element from \"./Node\";\r\nimport \"./styles.css\";\r\n\r\nconst START_NODE_ROW = 0;\r\nconst START_NODE_COLUMN = 0;\r\n\r\nconst END_NODE_ROW = 0;\r\nconst END_NODE_COLUMN = 0;\r\n\r\nconst Container3 = () => {\r\n  const [grid, set_grid] = useState(new Array<Node>());\r\n\r\n  useEffect(() => {\r\n    set_grid(createGrid());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(grid);\r\n  }, [grid]);\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      {grid.map((node) => {\r\n        return <Element />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst createGrid = () => {\r\n  const grid = new Array<Node>();\r\n  for (let row = 0; row < 20; row++) {\r\n    for (let column = 0; column < 20; column++) {\r\n      const isStart = row === START_NODE_ROW && column === START_NODE_COLUMN;\r\n      const isFinish = row === END_NODE_ROW && column === END_NODE_COLUMN;\r\n      const node = new Node(row, column, isStart, isFinish);\r\n      grid.push(node);\r\n    }\r\n  }\r\n  return grid;\r\n};\r\n\r\nexport default Container3;\r\n"]},"metadata":{},"sourceType":"module"}