{"ast":null,"code":"// This is a legacy function.\n// Use `findNumbers()` instead.\nimport _findPhoneNumbers, { searchPhoneNumbers as _searchPhoneNumbers } from './findPhoneNumbers_';\nimport { normalizeArguments } from './parsePhoneNumber';\nexport default function findPhoneNumbers() {\n  var _normalizeArguments = normalizeArguments(arguments),\n      text = _normalizeArguments.text,\n      options = _normalizeArguments.options,\n      metadata = _normalizeArguments.metadata;\n\n  return _findPhoneNumbers(text, options, metadata);\n}\n/**\r\n * @return ES6 `for ... of` iterator.\r\n */\n\nexport function searchPhoneNumbers() {\n  var _normalizeArguments2 = normalizeArguments(arguments),\n      text = _normalizeArguments2.text,\n      options = _normalizeArguments2.options,\n      metadata = _normalizeArguments2.metadata;\n\n  return _searchPhoneNumbers(text, options, metadata);\n}","map":{"version":3,"sources":["../source/findPhoneNumbers.js"],"names":["searchPhoneNumbers","text","options","metadata","normalizeArguments","_findPhoneNumbers","_searchPhoneNumbers"],"mappings":"AAAA;AACA;AAEA,OAAA,iBAAA,IAA4BA,kBAAkB,IAA9C,mBAAA,QAAA,qBAAA;AACA,SAAA,kBAAA,QAAA,oBAAA;AAEA,eAAe,SAAA,gBAAA,GACf;AAAA,MAAA,mBAAA,GACqCI,kBAAkB,CADvD,SACuD,CADvD;AAAA,MACSH,IADT,GAAA,mBAAA,CAAA,IAAA;AAAA,MACeC,OADf,GAAA,mBAAA,CAAA,OAAA;AAAA,MACwBC,QADxB,GAAA,mBAAA,CAAA,QAAA;;AAEC,SAAOE,iBAAiB,CAAA,IAAA,EAAA,OAAA,EAAxB,QAAwB,CAAxB;AACA;AAED;;;;AAGA,OAAO,SAAA,kBAAA,GACP;AAAA,MAAA,oBAAA,GACqCD,kBAAkB,CADvD,SACuD,CADvD;AAAA,MACSH,IADT,GAAA,oBAAA,CAAA,IAAA;AAAA,MACeC,OADf,GAAA,oBAAA,CAAA,OAAA;AAAA,MACwBC,QADxB,GAAA,oBAAA,CAAA,QAAA;;AAEC,SAAOG,mBAAmB,CAAA,IAAA,EAAA,OAAA,EAA1B,QAA0B,CAA1B;AACA","sourcesContent":["// This is a legacy function.\r\n// Use `findNumbers()` instead.\r\n\r\nimport _findPhoneNumbers, { searchPhoneNumbers as _searchPhoneNumbers } from './findPhoneNumbers_'\r\nimport { normalizeArguments } from './parsePhoneNumber'\r\n\r\nexport default function findPhoneNumbers()\r\n{\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn _findPhoneNumbers(text, options, metadata)\r\n}\r\n\r\n/**\r\n * @return ES6 `for ... of` iterator.\r\n */\r\nexport function searchPhoneNumbers()\r\n{\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn _searchPhoneNumbers(text, options, metadata)\r\n}"]},"metadata":{},"sourceType":"module"}